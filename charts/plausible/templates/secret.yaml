---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "plausible.fullname" . }}
  labels:
    {{- include "plausible.labels" . | nindent 4 }}
type: Opaque
data:
  BASE_URL: {{ .Values.plausible.baseUrl | b64enc }}

  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretName := include "plausible.fullname" .}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  
  {{- $secretKeyBase := (get $secretData "SECRET_KEY_BASE") | default (randAlphaNum 64 | b64enc) }}
  SECRET_KEY_BASE: {{ $secretKeyBase | quote }}

  {{- $totpVaultKey := (get $secretData "TOTP_VAULT_KEY") | default (randAlphaNum 32 | b64enc) }}
  TOTP_VAULT_KEY: {{ $totpVaultKey | quote }}

  DATABASE_URL: {{ (printf "postgres://%s:%s@%s-db:5432/%s" .Values.plausible.db.user .Values.plausible.db.password (include "plausible.fullname" .) .Values.plausible.db.name ) | b64enc }}
  
  CLICKHOUSE_DATABASE_URL: {{ printf "http://%s-eventdb:8123/plausible_events_db" (include "plausible.fullname" .) | b64enc }}

  {{- if .Values.plausible.google.client_id }}
  GOOGLE_CLIENT_ID: {{ .Values.plausible.google.client_id | b64enc }}
  {{- end }}
  {{- if .Values.plausible.google.client_secret }}
  GOOGLE_CLIENT_SECRET: {{ .Values.plausible.google.client_secret | b64enc }}
  {{- end }}

  {{- if .Values.plausible.maxmind.license_key }}
  MAXMIND_LICENSE_KEY: {{ .Values.plausible.maxmind.license_key | b64enc }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "plausible.fullname" . }}-db
  labels:
    {{- include "plausible.labels" . | nindent 4 }}
type: Opaque
data:
  POSTGRES_USER: {{ .Values.plausible.db.user | b64enc }}
  POSTGRES_PASSWORD: {{ .Values.plausible.db.password | b64enc }}
  POSTGRES_DB: {{ .Values.plausible.db.name | b64enc }}
...
